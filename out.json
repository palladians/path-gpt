[{"filename":"README.md","content":"# path-gpt\n\nTo install dependencies:\n\n```bash\nbun install\n```\n\nTo run:\n\n```bash\nbun run index.ts\n```\n\nThis project was created using `bun init` in bun v1.0.11. [Bun](https://bun.sh) is a fast all-in-one JavaScript runtime.\n"},{"filename":"package.json","content":"{\n  \"name\": \"path-gpt\",\n  \"module\": \"dist/index.cts\",\n  \"type\": \"module\",\n  \"version\": \"0.0.1\",\n  \"bin\": \"dist/index.cjs\",\n  \"files\": [\n    \"dist\"\n  ],\n  \"scripts\": {\n    \"build\": \"tsup && chmod +x dist/index.cjs\",\n    \"start\": \"node ./dist/index.cjs\"\n  },\n  \"devDependencies\": {\n    \"@tsconfig/bun\": \"^1.0.1\",\n    \"@types/fs-extra\": \"^11.0.4\",\n    \"bun-types\": \"latest\",\n    \"tsup\": \"^8.0.1\"\n  },\n  \"peerDependencies\": {\n    \"typescript\": \"^5.0.0\"\n  },\n  \"dependencies\": {\n    \"fs-extra\": \"^11.1.1\",\n    \"globby\": \"^14.0.0\"\n  }\n}\n"},{"filename":"tsconfig.json","content":"{\n  \"extends\": \"@tsconfig/bun/tsconfig.json\"\n}\n"},{"filename":"tsup.config.ts","content":"import { defineConfig } from \"tsup\";\n\nexport default defineConfig({\n  entry: [\"./src/index.ts\"],\n  outDir: \"./dist\",\n  format: \"cjs\" as any,\n  sourcemap: true,\n  clean: true,\n  bundle: true,\n  noExternal: [\"fs-extra\", \"globby\"],\n  platform: \"node\",\n});\n"},{"filename":"ignore.json","content":"[\"bun.lockb\", \"yarn.lock\", \"package-lock.json\", \"pnpm-lock.yaml\"]\n"},{"filename":"index.ts","content":"import { globby } from \"globby\";\nimport { readFile, writeJson } from \"fs-extra\";\nimport ignoreFiles from \"./ignore.json\";\n\nconst run = async () => {\n  const ignoreArr = ignoreFiles.map((file) => [`!${file}`, `!**/*/${file}`]);\n  const filesInCwd = await globby([\"**/*\", ...ignoreArr].flat(), {\n    gitignore: true,\n    absolute: true,\n  });\n  const contents = await Promise.all(\n    filesInCwd.map(async (dir) => {\n      const content = await readFile(dir, { encoding: \"utf8\" });\n      return {\n        filename: dir.split(\"/\").slice(-1)[0],\n        content,\n      };\n    })\n  );\n  writeJson(\"./out.json\", contents);\n};\n\nrun();\n"}]
